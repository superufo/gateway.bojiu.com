// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        v3.20.1
// source: pb_gateway.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//心跳包
type MHeartBitTos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *int32 `protobuf:"varint,1,opt,name=time,proto3,oneof" json:"time,omitempty"`
}

func (x *MHeartBitTos) Reset() {
	*x = MHeartBitTos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MHeartBitTos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MHeartBitTos) ProtoMessage() {}

func (x *MHeartBitTos) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MHeartBitTos.ProtoReflect.Descriptor instead.
func (*MHeartBitTos) Descriptor() ([]byte, []int) {
	return file_pb_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *MHeartBitTos) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

// 发给客户端
type MHeartBitToc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *int32 `protobuf:"varint,1,opt,name=time,proto3,oneof" json:"time,omitempty"`
}

func (x *MHeartBitToc) Reset() {
	*x = MHeartBitToc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MHeartBitToc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MHeartBitToc) ProtoMessage() {}

func (x *MHeartBitToc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MHeartBitToc.ProtoReflect.Descriptor instead.
func (*MHeartBitToc) Descriptor() ([]byte, []int) {
	return file_pb_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *MHeartBitToc) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

// 发给客户端
type MServerErrorToc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code *int32 `protobuf:"varint,1,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *MServerErrorToc) Reset() {
	*x = MServerErrorToc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MServerErrorToc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MServerErrorToc) ProtoMessage() {}

func (x *MServerErrorToc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MServerErrorToc.ProtoReflect.Descriptor instead.
func (*MServerErrorToc) Descriptor() ([]byte, []int) {
	return file_pb_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *MServerErrorToc) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *MServerErrorToc) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// client to server  登录
type MLoginTos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`         // 用户id
	PassToken string `protobuf:"bytes,2,opt,name=pass_token,json=passToken,proto3" json:"pass_token,omitempty"` // token
}

func (x *MLoginTos) Reset() {
	*x = MLoginTos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MLoginTos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MLoginTos) ProtoMessage() {}

func (x *MLoginTos) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MLoginTos.ProtoReflect.Descriptor instead.
func (*MLoginTos) Descriptor() ([]byte, []int) {
	return file_pb_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *MLoginTos) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MLoginTos) GetPassToken() string {
	if x != nil {
		return x.PassToken
	}
	return ""
}

type MLoginToc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`    //成功返回 0 失败返回1
	Token  *string `protobuf:"bytes,2,opt,name=token,proto3,oneof" json:"token,omitempty"` //成功返回  失败返回 空
}

func (x *MLoginToc) Reset() {
	*x = MLoginToc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MLoginToc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MLoginToc) ProtoMessage() {}

func (x *MLoginToc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MLoginToc.ProtoReflect.Descriptor instead.
func (*MLoginToc) Descriptor() ([]byte, []int) {
	return file_pb_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *MLoginToc) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MLoginToc) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

// 用户信息
type MUserToc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SId          *string `protobuf:"bytes,1,opt,name=s_id,json=sId,proto3,oneof" json:"s_id,omitempty"`
	Id           *int32  `protobuf:"varint,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Account      *string `protobuf:"bytes,3,opt,name=account,proto3,oneof" json:"account,omitempty"`
	Name         *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Token        *string `protobuf:"bytes,5,opt,name=token,proto3,oneof" json:"token,omitempty"`
	Platform     *string `protobuf:"bytes,6,opt,name=platform,proto3,oneof" json:"platform,omitempty"`
	Sex          *int32  `protobuf:"varint,7,opt,name=sex,proto3,oneof" json:"sex,omitempty"`
	Mac          *string `protobuf:"bytes,8,opt,name=mac,proto3,oneof" json:"mac,omitempty"`
	Nickname     *string `protobuf:"bytes,9,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	Ccode        *string `protobuf:"bytes,10,opt,name=ccode,proto3,oneof" json:"ccode,omitempty"`
	Phone        *string `protobuf:"bytes,11,opt,name=phone,proto3,oneof" json:"phone,omitempty"`
	RegisterTime *int64  `protobuf:"varint,12,opt,name=register_time,json=registerTime,proto3,oneof" json:"register_time,omitempty"`
	Password     *string `protobuf:"bytes,13,opt,name=password,proto3,oneof" json:"password,omitempty"`
	Agent        *string `protobuf:"bytes,14,opt,name=agent,proto3,oneof" json:"agent,omitempty"`
	Status       *int32  `protobuf:"varint,15,opt,name=status,proto3,oneof" json:"status,omitempty"`
	RegisterIp   *string `protobuf:"bytes,16,opt,name=register_ip,json=registerIp,proto3,oneof" json:"register_ip,omitempty"`
	FatherId     *string `protobuf:"bytes,17,opt,name=father_id,json=fatherId,proto3,oneof" json:"father_id,omitempty"`
}

func (x *MUserToc) Reset() {
	*x = MUserToc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MUserToc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MUserToc) ProtoMessage() {}

func (x *MUserToc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MUserToc.ProtoReflect.Descriptor instead.
func (*MUserToc) Descriptor() ([]byte, []int) {
	return file_pb_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *MUserToc) GetSId() string {
	if x != nil && x.SId != nil {
		return *x.SId
	}
	return ""
}

func (x *MUserToc) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *MUserToc) GetAccount() string {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return ""
}

func (x *MUserToc) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MUserToc) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *MUserToc) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *MUserToc) GetSex() int32 {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return 0
}

func (x *MUserToc) GetMac() string {
	if x != nil && x.Mac != nil {
		return *x.Mac
	}
	return ""
}

func (x *MUserToc) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *MUserToc) GetCcode() string {
	if x != nil && x.Ccode != nil {
		return *x.Ccode
	}
	return ""
}

func (x *MUserToc) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *MUserToc) GetRegisterTime() int64 {
	if x != nil && x.RegisterTime != nil {
		return *x.RegisterTime
	}
	return 0
}

func (x *MUserToc) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *MUserToc) GetAgent() string {
	if x != nil && x.Agent != nil {
		return *x.Agent
	}
	return ""
}

func (x *MUserToc) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *MUserToc) GetRegisterIp() string {
	if x != nil && x.RegisterIp != nil {
		return *x.RegisterIp
	}
	return ""
}

func (x *MUserToc) GetFatherId() string {
	if x != nil && x.FatherId != nil {
		return *x.FatherId
	}
	return ""
}

type MUserInfoToc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SId                   *string `protobuf:"bytes,1,opt,name=s_id,json=sId,proto3,oneof" json:"s_id,omitempty"`
	Login_Time            *int64  `protobuf:"varint,2,opt,name=login_Time,json=loginTime,proto3,oneof" json:"login_Time,omitempty"`
	OfflineTime           *int64  `protobuf:"varint,3,opt,name=OfflineTime,proto3,oneof" json:"OfflineTime,omitempty"`
	Gold                  *int64  `protobuf:"varint,4,opt,name=Gold,proto3,oneof" json:"Gold,omitempty"`
	Diamonds              *int64  `protobuf:"varint,5,opt,name=Diamonds,proto3,oneof" json:"Diamonds,omitempty"`
	State                 *int64  `protobuf:"varint,6,opt,name=State,proto3,oneof" json:"State,omitempty"`
	LoginIp               *string `protobuf:"bytes,7,opt,name=LoginIp,proto3,oneof" json:"LoginIp,omitempty"`
	LoginSFlag            *string `protobuf:"bytes,8,opt,name=LoginSFlag,proto3,oneof" json:"LoginSFlag,omitempty"`
	CtrlStatus            *int64  `protobuf:"varint,9,opt,name=CtrlStatus,proto3,oneof" json:"CtrlStatus,omitempty"`
	GameId                *int64  `protobuf:"varint,10,opt,name=GameId,proto3,oneof" json:"GameId,omitempty"`
	RoomId                *int64  `protobuf:"varint,11,opt,name=RoomId,proto3,oneof" json:"RoomId,omitempty"`
	DeskId                *int64  `protobuf:"varint,12,opt,name=DeskId,proto3,oneof" json:"DeskId,omitempty"`
	CtrlValue             *int64  `protobuf:"varint,13,opt,name=CtrlValue,proto3,oneof" json:"CtrlValue,omitempty"`
	PStock                *int64  `protobuf:"varint,14,opt,name=PStock,proto3,oneof" json:"PStock,omitempty"`
	RecentPlayTime        *int64  `protobuf:"varint,15,opt,name=RecentPlayTime,proto3,oneof" json:"RecentPlayTime,omitempty"`
	TotalRecharge         *int64  `protobuf:"varint,16,opt,name=TotalRecharge,proto3,oneof" json:"TotalRecharge,omitempty"`
	TotalCash             *int64  `protobuf:"varint,17,opt,name=TotalCash,proto3,oneof" json:"TotalCash,omitempty"`
	GmAward1              *int64  `protobuf:"varint,18,opt,name=GmAward1,proto3,oneof" json:"GmAward1,omitempty"`
	GmAward2              *int64  `protobuf:"varint,19,opt,name=GmAward2,proto3,oneof" json:"GmAward2,omitempty"`
	RecentPlayPerRoundSid *string `protobuf:"bytes,20,opt,name=RecentPlayPerRoundSid,proto3,oneof" json:"RecentPlayPerRoundSid,omitempty"`
}

func (x *MUserInfoToc) Reset() {
	*x = MUserInfoToc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MUserInfoToc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MUserInfoToc) ProtoMessage() {}

func (x *MUserInfoToc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MUserInfoToc.ProtoReflect.Descriptor instead.
func (*MUserInfoToc) Descriptor() ([]byte, []int) {
	return file_pb_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *MUserInfoToc) GetSId() string {
	if x != nil && x.SId != nil {
		return *x.SId
	}
	return ""
}

func (x *MUserInfoToc) GetLogin_Time() int64 {
	if x != nil && x.Login_Time != nil {
		return *x.Login_Time
	}
	return 0
}

func (x *MUserInfoToc) GetOfflineTime() int64 {
	if x != nil && x.OfflineTime != nil {
		return *x.OfflineTime
	}
	return 0
}

func (x *MUserInfoToc) GetGold() int64 {
	if x != nil && x.Gold != nil {
		return *x.Gold
	}
	return 0
}

func (x *MUserInfoToc) GetDiamonds() int64 {
	if x != nil && x.Diamonds != nil {
		return *x.Diamonds
	}
	return 0
}

func (x *MUserInfoToc) GetState() int64 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *MUserInfoToc) GetLoginIp() string {
	if x != nil && x.LoginIp != nil {
		return *x.LoginIp
	}
	return ""
}

func (x *MUserInfoToc) GetLoginSFlag() string {
	if x != nil && x.LoginSFlag != nil {
		return *x.LoginSFlag
	}
	return ""
}

func (x *MUserInfoToc) GetCtrlStatus() int64 {
	if x != nil && x.CtrlStatus != nil {
		return *x.CtrlStatus
	}
	return 0
}

func (x *MUserInfoToc) GetGameId() int64 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *MUserInfoToc) GetRoomId() int64 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

func (x *MUserInfoToc) GetDeskId() int64 {
	if x != nil && x.DeskId != nil {
		return *x.DeskId
	}
	return 0
}

func (x *MUserInfoToc) GetCtrlValue() int64 {
	if x != nil && x.CtrlValue != nil {
		return *x.CtrlValue
	}
	return 0
}

func (x *MUserInfoToc) GetPStock() int64 {
	if x != nil && x.PStock != nil {
		return *x.PStock
	}
	return 0
}

func (x *MUserInfoToc) GetRecentPlayTime() int64 {
	if x != nil && x.RecentPlayTime != nil {
		return *x.RecentPlayTime
	}
	return 0
}

func (x *MUserInfoToc) GetTotalRecharge() int64 {
	if x != nil && x.TotalRecharge != nil {
		return *x.TotalRecharge
	}
	return 0
}

func (x *MUserInfoToc) GetTotalCash() int64 {
	if x != nil && x.TotalCash != nil {
		return *x.TotalCash
	}
	return 0
}

func (x *MUserInfoToc) GetGmAward1() int64 {
	if x != nil && x.GmAward1 != nil {
		return *x.GmAward1
	}
	return 0
}

func (x *MUserInfoToc) GetGmAward2() int64 {
	if x != nil && x.GmAward2 != nil {
		return *x.GmAward2
	}
	return 0
}

func (x *MUserInfoToc) GetRecentPlayPerRoundSid() string {
	if x != nil && x.RecentPlayPerRoundSid != nil {
		return *x.RecentPlayPerRoundSid
	}
	return ""
}

//进入游戏
type MGameConfigToc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game []*PGameConfig `protobuf:"bytes,1,rep,name=game,proto3" json:"game,omitempty"` //0大厅1龙虎斗2红黑
}

func (x *MGameConfigToc) Reset() {
	*x = MGameConfigToc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MGameConfigToc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MGameConfigToc) ProtoMessage() {}

func (x *MGameConfigToc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MGameConfigToc.ProtoReflect.Descriptor instead.
func (*MGameConfigToc) Descriptor() ([]byte, []int) {
	return file_pb_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *MGameConfigToc) GetGame() []*PGameConfig {
	if x != nil {
		return x.Game
	}
	return nil
}

type PGameConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId   int32    `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`      //游戏ID
	State    int32    `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`                      //1开0关
	RoomInfo []*PRoom `protobuf:"bytes,3,rep,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"` //分支信息/房间信息
}

func (x *PGameConfig) Reset() {
	*x = PGameConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gateway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PGameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PGameConfig) ProtoMessage() {}

func (x *PGameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gateway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PGameConfig.ProtoReflect.Descriptor instead.
func (*PGameConfig) Descriptor() ([]byte, []int) {
	return file_pb_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *PGameConfig) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *PGameConfig) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PGameConfig) GetRoomInfo() []*PRoom {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

type PRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId   int32 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`       //房间类型
	State    int32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`                       //1开0关
	MinLimit int32 `protobuf:"varint,3,opt,name=min_limit,json=minLimit,proto3" json:"min_limit,omitempty"` //准入条件
}

func (x *PRoom) Reset() {
	*x = PRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gateway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PRoom) ProtoMessage() {}

func (x *PRoom) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gateway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PRoom.ProtoReflect.Descriptor instead.
func (*PRoom) Descriptor() ([]byte, []int) {
	return file_pb_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *PRoom) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *PRoom) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PRoom) GetMinLimit() int32 {
	if x != nil {
		return x.MinLimit
	}
	return 0
}

//进入桌子告诉自己基本信息
type MGame_1LeaveDeskTog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId *int32 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3,oneof" json:"room_id,omitempty"` //房间id
	DeskId *int32 `protobuf:"varint,2,opt,name=desk_id,json=deskId,proto3,oneof" json:"desk_id,omitempty"` //桌子id
}

func (x *MGame_1LeaveDeskTog) Reset() {
	*x = MGame_1LeaveDeskTog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gateway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MGame_1LeaveDeskTog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MGame_1LeaveDeskTog) ProtoMessage() {}

func (x *MGame_1LeaveDeskTog) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gateway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MGame_1LeaveDeskTog.ProtoReflect.Descriptor instead.
func (*MGame_1LeaveDeskTog) Descriptor() ([]byte, []int) {
	return file_pb_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *MGame_1LeaveDeskTog) GetRoomId() int32 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

func (x *MGame_1LeaveDeskTog) GetDeskId() int32 {
	if x != nil && x.DeskId != nil {
		return *x.DeskId
	}
	return 0
}

var File_pb_gateway_proto protoreflect.FileDescriptor

var file_pb_gateway_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x62, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x33, 0x0a, 0x0f, 0x6d, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x69,
	0x74, 0x5f, 0x74, 0x6f, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x0f, 0x6d, 0x5f, 0x68, 0x65, 0x61,
	0x72, 0x74, 0x5f, 0x62, 0x69, 0x74, 0x5f, 0x74, 0x6f, 0x63, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x12,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74,
	0x6f, 0x63, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x0b, 0x6d, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x4a, 0x0a, 0x0b, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xbc, 0x05, 0x0a, 0x0a,
	0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x63, 0x12, 0x16, 0x0a, 0x04, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x03, 0x73, 0x65, 0x78, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x05, 0x63, 0x63, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x05, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0e, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x70, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x66, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x08,
	0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x73, 0x5f, 0x69, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x78, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x63, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0xd4, 0x07, 0x0a, 0x0f, 0x6d,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x6f, 0x63, 0x12, 0x16,
	0x0a, 0x04, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x02, 0x52, 0x0b, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x03, 0x52, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x44, 0x69,
	0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x08,
	0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x49, 0x70, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0a, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x53, 0x46, 0x6c, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x43, 0x74,
	0x72, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08,
	0x52, 0x0a, 0x43, 0x74, 0x72, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x09, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x06,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x44, 0x65, 0x73,
	0x6b, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x06, 0x44, 0x65, 0x73,
	0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x43, 0x74, 0x72, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x09, 0x43, 0x74, 0x72,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x50, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x06, 0x50, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0e,
	0x52, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0f, 0x52, 0x0d, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x10, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x47, 0x6d, 0x41, 0x77, 0x61, 0x72, 0x64, 0x31, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x11, 0x52, 0x08, 0x47, 0x6d, 0x41, 0x77, 0x61, 0x72, 0x64, 0x31, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x47, 0x6d, 0x41, 0x77, 0x61, 0x72, 0x64, 0x32, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x12, 0x52, 0x08, 0x47, 0x6d, 0x41, 0x77, 0x61, 0x72, 0x64, 0x32,
	0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x50, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x13, 0x52, 0x15, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x50, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x73, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x49, 0x70, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x46, 0x6c, 0x61,
	0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x74, 0x72, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x44, 0x65, 0x73, 0x6b, 0x49,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x74, 0x72, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x50, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x47, 0x6d, 0x41, 0x77, 0x61, 0x72, 0x64, 0x31, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x47,
	0x6d, 0x41, 0x77, 0x61, 0x72, 0x64, 0x32, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x50, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69,
	0x64, 0x22, 0x37, 0x0a, 0x11, 0x6d, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x74, 0x6f, 0x63, 0x12, 0x22, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x0d, 0x70, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x09, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x70, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x54, 0x0a, 0x06, 0x70, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6d, 0x0a, 0x17, 0x6d, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x31, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x74, 0x6f,
	0x67, 0x12, 0x1c, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1c, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x01, 0x52, 0x06, 0x64, 0x65, 0x73, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x62, 0x6f, 0x6a, 0x69, 0x75, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_gateway_proto_rawDescOnce sync.Once
	file_pb_gateway_proto_rawDescData = file_pb_gateway_proto_rawDesc
)

func file_pb_gateway_proto_rawDescGZIP() []byte {
	file_pb_gateway_proto_rawDescOnce.Do(func() {
		file_pb_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_gateway_proto_rawDescData)
	})
	return file_pb_gateway_proto_rawDescData
}

var file_pb_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_pb_gateway_proto_goTypes = []interface{}{
	(*MHeartBitTos)(nil),        // 0: m_heart_bit_tos
	(*MHeartBitToc)(nil),        // 1: m_heart_bit_toc
	(*MServerErrorToc)(nil),     // 2: m_server_error_toc
	(*MLoginTos)(nil),           // 3: m_login_tos
	(*MLoginToc)(nil),           // 4: m_login_toc
	(*MUserToc)(nil),            // 5: m_user_toc
	(*MUserInfoToc)(nil),        // 6: m_user_info_toc
	(*MGameConfigToc)(nil),      // 7: m_game_config_toc
	(*PGameConfig)(nil),         // 8: p_game_config
	(*PRoom)(nil),               // 9: p_room
	(*MGame_1LeaveDeskTog)(nil), // 10: m_game_1_leave_desk_tog
}
var file_pb_gateway_proto_depIdxs = []int32{
	8, // 0: m_game_config_toc.game:type_name -> p_game_config
	9, // 1: p_game_config.room_info:type_name -> p_room
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pb_gateway_proto_init() }
func file_pb_gateway_proto_init() {
	if File_pb_gateway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MHeartBitTos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MHeartBitToc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MServerErrorToc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MLoginTos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MLoginToc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MUserToc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MUserInfoToc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MGameConfigToc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gateway_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PGameConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gateway_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gateway_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MGame_1LeaveDeskTog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_gateway_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_pb_gateway_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_pb_gateway_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_pb_gateway_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_pb_gateway_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_pb_gateway_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_pb_gateway_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_gateway_proto_goTypes,
		DependencyIndexes: file_pb_gateway_proto_depIdxs,
		MessageInfos:      file_pb_gateway_proto_msgTypes,
	}.Build()
	File_pb_gateway_proto = out.File
	file_pb_gateway_proto_rawDesc = nil
	file_pb_gateway_proto_goTypes = nil
	file_pb_gateway_proto_depIdxs = nil
}
